name: Code-style

on:
  push:
    branches:
      - 'feat/**'
      - 'dev'
  pull_request:
    type: [opened, reopened, synchronize]
  workflow_dispatch:

jobs:
  web-client:
    name: request check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      # Start yarn setup
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # End yarn setup
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      # # Format code
      # - name: Formatting and linting
      #   run: yarn code-style
      # # Commitlint s
      # - name: Validate all commits from PR
      #   run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: ðŸ¥¬ Refresh Content
        run: yarn refresh-content
